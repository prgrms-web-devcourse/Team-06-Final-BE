plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.8'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'org.ec4j.editorconfig' version '0.0.3'
    id 'checkstyle'
    id 'jacoco'
    id 'com.epages.restdocs-api-spec' version '0.16.4'
    id 'org.hidetake.swagger.generator' version '2.19.2'
}

jacoco {
	toolVersion = '0.8.8'
}

group = 'com.prgrms'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
    set('testcontainersVersion', "1.17.6")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-mysql'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:mysql'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'com.epages:restdocs-api-spec-mockmvc:0.16.4'

    swaggerUI 'org.webjars:swagger-ui:4.1.3'
}
openapi3 {
    server = 'https://localhost:8080'
    title = 'API 명세서'
    description = 'API 명세서 입니다.'
    version = "0.1.0"
    format = 'yaml'
}

swaggerSources {
    register("ApiDocument").configure {
        setInputFile(file("${rootProject.buildDir}/api-spec/openapi3.yaml"))
    }
}
editorconfig {
    excludes = ['build']
}
//check.dependsOn editorconfigCheck

checkstyle {
    maxWarnings = 0 // 규칙이 어긋나는 코드가 하나라도 있을 경우 빌드 fail을 내고 싶다면 이 선언을 추가한다.
    configFile = file("${rootProject.projectDir}/config/checkstyle/naver-checkstyle-rules.xml")
    configProperties = ["suppressionFile": "${rootProject.projectDir}/config/checkstyle/naver-checkstyle-suppressions.xml"]
    toolVersion = "8.24"  // checkstyle 버전 8.24 이상 선언
}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()

    finalizedBy('jacocoTestReport')
}


tasks.withType(GenerateSwaggerUI).configureEach {
    dependsOn "openapi3"
}

tasks.register('copySwaggerUI', Copy) {
    dependsOn "generateSwaggerUIApiDocument"

    from "${generateSwaggerUIApiDocument.outputDir}"
    into "${rootProject.buildDir}/resources/main/static/docs"

}


tasks.named("bootJar") {
    dependsOn "copySwaggerUI"
}


bootJar{
	archivesBaseName = 'pearls-1.0'
	archiveFileName = 'pearls-1.0.jar'
	archiveVersion = "0.0.0"
}

jacocoTestReport {
	reports {
		html.enabled(true)
		xml.enabled(true)
	}

    finalizedBy('jacocoTestCoverageVerification')
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			enabled = true
			element = 'CLASS'

			limit {
				counter = 'BRANCH'
				value = 'COVEREDRATIO'
				minimum = 0.5
			}
			limit {
				counter = 'LINE'
				value = 'COVEREDRATIO'
				minimum = 0.5
			}

			excludes = [
			        'com.example.demo.Application'
			]
		}
	}
}
